@using Frontend.Resource
@model Frontend.Models.StoreModel
@{
    ViewBag.Title = "Add";
}

@*@{
    var data = ViewBag.Data as List<Frontend.Models.StoreModel>;
    var itemdefault = data.FirstOrDefault();
}
*@



<style>
    .img-size {
        text-align: center;
        color: #a7a7a7;
    }

    .note-editor .btn:not(.btn-link):not(.btn-circle) i {
        font-size: 12px;
        position: relative;
        line-height: 1.5;
        top: 0px;
    }

    .note-editor .btn:not(.btn-link):not(.btn-circle) i {
        font-size: 12px;
        position: relative;
        line-height: 1.5;
        top: 0px;
    }

    .note-editor.note-frame {
        border-radius: 0;
    }

    .addform {
    }

    .fstElement {
        width: 100%;
        font-size: 9px;
        border: none;
        display: block;
    }

    .fstMultipleMode .fstControls {
        width: 100%;
        padding: 0.5em 0 0 0;
    }

    .fstMultipleMode.fstActive .fstResults {
        z-index: 9999;
    }

    .drop_uploader.drop_zone {
        border: 1px dashed #999999;
        border-radius: 0;
    }
    textarea {
        resize: none;
    }
     .navbtn{
        margin-top:-10px!important;
        float:right;
    }
</style>
<div class="row clearfix">
    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
        <div class="card">
            <div class="header">
                <h2 class="pull-left">
                    @Resource.lbl_detail_store
                </h2>
            </div>
            <div class="body">
                 <form id="form_data" class="formsubmit formdata" method="post" action="" enctype="multipart/form-data">
                <div class="row">
                    <div class="col-md-6 no-padding">
                        <div style="padding-right:30px;display:inline-table;border-right: 1px solid #d8d5d5;">
                            <div class="col-xs-1 no-padding" style="display:inline-table;">
                                <i class="material-icons icon-lang">language</i>
                            </div>
                            <div class="col-xs-11">
                                <ul class="nav nav-tabs tab-lang">
                                   @* @foreach (var item in listcountry)
                                    {
                                        <li class="@(item.langcode == "vi" ? "active" : "")"><a data-toggle="tab" href="#tab-@item.langcode">@item.langcode.ToUpper()</a></li>
                                    }*@
                                </ul>
                            </div>
                            <div class="col-md-12 no-padding formsearch storeform">
                                <div class="tab-content">
                                    @*@foreach (var item in listcountry)*@
                                    @*{*@
                                        @*var itemdata = data.Where(p => p.LangCode == item.langcode).FirstOrDefault() ?? new AeonDemo.Models.Store.StoreModel();*@
                                        <div id="" @*class="tab-pane"*@ >

                                          @*  <form id="form_data" class="formsubmit formdata" method="post" action="" enctype="multipart/form-data">*@
                                                <input type="hidden" class="frmData" id="reference_id" name="reference_id" />
                                                <input type="hidden" class="frmData" id="id" name="id" />
                                                <div class="addform row">
                                                    <div class="col-md-12">
                                                        <label class="required">@Resource.lbl_storecode</label>
                                                        <div class="form-group">
                                                            <div class="form-line selectlist">
                                                              @* @{
                                                                    Model.code = itemdefault.code;
                                                                }
                                                                @Html.TextBoxFor(m => m.code, new { @class = "form-control", @required = "required", @placeholder = "AEON Mall Tân Phú Celadon", @maxlength = "5" })*@
                                                                <input class="form-control frmData" placeholder="" required maxlength="5" id="code" name="code" type="text" style="width:100%" readonly/>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-12">
                                                        <label class="required">@Resource.lbl_storename</label>
                                                        <div class="form-group">
                                                            <div class="form-line selectlist">
                                                              @* @{
                                                                    Model.name = itemdefault.name;
                                                                }
                                                                @Html.TextBoxFor(m => m.name, new { @class = "form-control", @required = "required", @placeholder = "Celadon", @maxlength = "200" })*@
                                                               <input class="form-control frmData" placeholder="" required maxlength="200" name="name" id="name" type="text" style="width:100%" readonly/>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <div class="col-md-12">
                                                        <label class="required">@Resource.lbl_address</label>
                                                        <div class="form-group">
                                                            <div class="form-line selectlist">
                                                            @*  @{
                                                                    Model.address = itemdefault.address;
                                                                }
                                                                @Html.TextAreaFor(m => m.address, new { @class = "form-control", @required = "required", @maxlength = "200", @style = "height:80px;", @placeholder = "30 Bờ Bao Tân Thắng, Sơn Ký, Tân Phú, Hồ Chí Minh" })*@
                                                                <textarea id="address" placeholder = "" name="address" class="form-control frmData" required maxlength="200" style="height:80px;width:100%" readonly></textarea>
                                                               
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            
                                        </div>
                                    @*}*@
                                </div>
                              
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6 no-padding storeform">
                        <div style="padding-left:30px;display:inline-table;">
                            <div class="addform row">
                                <div class="col-md-12">
                                    <label class="required">@Resource.lbl_email</label>
                                    <div class="form-group">
                                        <div class="form-line selectlist">
                                          @* @{
                                                Model.email = itemdefault.email;
                                            }
                                            @Html.TextBoxFor(m => m.email,  new { @class = "form-control", @required = "required", @placeholder = "Celadon", @maxlength = "200" })*@

                                            <input  type="text" id="email" name="email" class="form-control" required placeholder="" maxlength="200" readonly />
                                            
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-12">
                                    <label class="required">@Resource.lbl_phone</label>
                                    <div class="form-group">
                                        <div class="form-line selectlist">
                                         @* @{
                                                Model.phone_number = itemdefault.phone_number;
                                            }
                                              @Html.TextBoxFor(m => m.phone_number, new { @class = "form-control", @required = "required", @placeholder = "02862886060", @minlength = "10", @maxlength = "11", onkeypress = "return IsNumeric(event);", ondrop = "return false;" })*@
                                              <input  type="text" id="phone_number" name="phone_number" required class="form-control"  placeholder="" minlength="10" maxlength="10" onkeypress="return IsNumeric(event)" ondrop="return false" readonly />
                                            
                                        </div>
                                    </div>
                                </div>                                                                                                                                                                                                                   
                               @* <div class="col-md-8">
                                    <label class="required">@Resource.lbl_image</label>
                                    <div class="form-group">
                                        <div class="form-line" style="border:0">
                                            <div class="row">
                                                <div class="col-md-12">
                                                    <div class="img-content">
                                                        <i class="material-icons hidden" data-file="ImageFile0" onclick="removeImage(this)">clear</i>
                                                        <input type="file" img-old="@(itemdefault.url_image ?? "~/img/no-image.jpg")" class="hidden img-file0" id="ImageFile0" name="ImageFile0" required onchange="readURLC(this);" data-imageid="Image" />
                                                        <img id="Image" src="@(itemdefault.url_image ?? "~/img/no-image.jpg")" class="img-responsive center-block pull-left" onclick="$('#ImageFile0').click()" style="cursor:pointer;width:100%;height:230px" />
                                                    </div>
                                                    <p class="img-size">660 x 338</p>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>*@
                            </div>
                        </div>
                    </div>
                </div>
                <div>

                <button type="button" onclick="window.location.href='/Store'" class="btn waves-effect" style="margin-right:5px">@Resource.btn_back</button>
                </div>
                 </form>
            </div>
            
        </div>
       
    </div> 
</div>

@section Scripts{

    <script src="~/Content/fastselect/fastselect.standalone.js"></script>
    <script src="~/Scripts/js/jquery.number.js"></script>

    <script>
        $(document).ready(function () {
            $(".focused").removeClass("focused");
            ShowData(GetUrlParam('reference_id'));
        })

        function ShowData(referenceid) {
            GetUrl(apiConfig.api.host_user_service,
                apiConfig.api.store.controller,
                apiConfig.api.store.action.get_edit.path,
                apiConfig.api.store.action.get_edit.method,
                {
                    reference_id: referenceid
                },
                'fnGetSuccess', 'msgError');

        }
        function fnGetSuccess(result) { 
            $('#id').val(result.id);
             $('#reference_id').val(result.reference_id);
              $('#code').val(result.code);
             $('#name').val(result.name);
               $('#address').val(result.address);
             $('#email').val(result.email);
             $('#phone_number').val(result.phone_number);
        }
        function readURL(input, type) {
            var fsize = 1024 * 1024 * 2;
            if (input.files[0].size < fsize) {
                if (input.files && input.files[0]) {
                    var reader = new FileReader();
                    reader.onload = function (e) {
                        $(input).parent().children('img').attr('src', e.target.result);

                        if (type == 'bus')
                            $('#Image0').attr('src', e.target.result);
                        else
                            $('#Image').attr('src', e.target.result);

                    }
                    reader.readAsDataURL(input.files[0]);
                    $(input).parent().children("i").removeClass("hidden");

                }
            }
            else {
                notify.alert("Allowed file size exceeded. (Max. 2 MB)", 'Warning', TITLE_STATUS_DANGER);
            }
        }

        function Save() {
            var formdata = new FormData($(".formdata")[0]);
            validateform(formdata);
            
        }

        function checkIfDuplicateExists(w) {
            return new Set(w).size !== w.length
        }

        function isEmail(email) {
                var regex = /^([a-zA-Z0-9_.+-])+\@("@")(([a-zA-Z0-9-])+\.)+([a-zA-Z0-9]{2,4})+$/;
                return regex.test(email);
        }
        function fnEditSuccess(result) {
                    toastr.success('@Html.Raw(Resource.lbl_addSuccess)', '@Html.Raw(@Resource.lbl_noti)');
                    setTimeout(function() {
                        window.location.href = '/Store'
                    }, 600)
        }
        function phonenumber(inputtxt) {
                var phoneno10x = /[0-9]{11}/;
                var phoneno9x = /[0-9]{10}/;


                if (inputtxt === '') {
                    return true;
                }
                else {
                    if (inputtxt.match(phoneno10x) || inputtxt.match(phoneno9x)) {
                        return true;
                    }
                    else {
                        var msg = '<label id="name-error" class="error">Phone Number Invalid</label>';
                        $("#phone_number").closest('.form-line').addClass("error");
                        $("#phone_number").closest('.form-group').append(msg);
                        return false;
                    }
                }
        }

       function IsNumeric(e) {
                var specialKeys = new Array();
                specialKeys.push(8);
                var keyCode = e.which ? e.which : e.keyCode
                var ret = ((keyCode >= 48 && keyCode <= 57) || specialKeys.indexOf(keyCode) != -1);
                return ret;
       }
      var required_mgs = '<label id="name-error" class="error">This field is required.</label>';
       function validateform(formdata, issave) {
           $("label.error").remove();
           $(".error").removeClass("error");
           var checkvalidate = false;
                for (var key of formdata.keys()) {
                    if ($(".storeform #" + key).prop("required") && $("#" + key).val().toString().trim() == "") {
                        $(".storeform #" + key).parent().addClass("error");
                        $(".storeform #" + key).parent().parent().append(required_mgs);
                        checkvalidate = true;
                    }
                }

                //if (validateImage("img-file0")) {
                //    checkvalidate = true;
                //}

                //if (checkimagesize($(".img-file0"), 1.95, 0.1)) {
                //    checkvalidate = true;
                //    var msg = '<label id="name-error" class="error">Image Size is not correct.</label>';
                //    $(".img-file0").closest('.form-line').addClass("error");
                //    $(".img-file0").closest('.form-group').append(msg);
                //}

                if ($("#email").val() !== '') {
                    if (!isEmail($("#email").val())) {
                        checkvalidate = true;
                        var msg = '<label id="name-error" class="error">Email Invalid</label>';
                        $("#email").closest('.form-line').addClass("error");
                        $("#email").closest('.form-group').append(msg);
                    }
                    else {
                        if ($("#email").val().endsWith('aeon.com.vn')) {

                        }
                        else {
                            checkvalidate = true;
                            var msg = '<label id="name-error" class="error">Email not contain aeon.com.vn</label>';
                            $("#email").closest('.form-line').addClass("error");
                            $("#email").closest('.form-group').append(msg);
                        }
                    }
                }
            
            if (!phonenumber($("#phone_number").val())) {
                checkvalidate = true;
            }

            if (!checkvalidate) {
                var formdata = new FormData();
                var index = 0;
                $(".formdata").each(function() {
                    var _formdata = new FormData(this);
                    for (var key of _formdata.keys()) {
                        formdata.append("model[" + index + "]." + key, _formdata.get(key));
                    }
                    formdata.append("model[" + index + "].email", $("#email").val());
                    formdata.append("model[" + index + "].phone_number", $("#phone_number").val());
                    formdata.append("model[" + index + "].code", $("#code").val());
                    formdata.append("model[" + index + "].name", $("#name").val());
                    formdata.append("model[" + index + "].address", $("#address").val());
                    //formdata.append("model[" + index + "].ImageFile", $('#ImageFile0')[0].files[0]);
                    index++;
                })

                PostFormData(apiConfig.api.host_user_service, apiConfig.api.store.controller, apiConfig.api.store.action.edit_store.path, apiConfig.api.store.action.edit_store.method, formdata
                    ,'fnEditSuccess', 'msgError');
                                 
            }
        }  
    </script>
 
}


