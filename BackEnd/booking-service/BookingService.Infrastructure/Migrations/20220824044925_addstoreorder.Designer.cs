// <auto-generated />
using System;
using BookingService.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BookingService.Infrastructure.Migrations
{
    [DbContext(typeof(BookingDbContext))]
    [Migration("20220824044925_addstoreorder")]
    partial class addstoreorder
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BookingService.Domain.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deleted_at");

                    b.Property<int?>("DeteleBy")
                        .HasColumnType("int")
                        .HasColumnName("deleted_by");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_at");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("modified_by");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ReferenceId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("reference_id");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.ToTable("DEPARTMENT", null, t => t.ExcludeFromMigrations());
                });

            modelBuilder.Entity("BookingService.Domain.Divisions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deleted_at");

                    b.Property<int?>("DepartmentID")
                        .HasColumnType("int");

                    b.Property<int?>("DeteleBy")
                        .HasColumnType("int")
                        .HasColumnName("deleted_by");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_at");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("modified_by");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ReferenceId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("reference_id");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentID");

                    b.ToTable("DIVISIONS", null, t => t.ExcludeFromMigrations());
                });

            modelBuilder.Entity("BookingService.Domain.History", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("code");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deleted_at");

                    b.Property<int?>("DeteleBy")
                        .HasColumnType("int")
                        .HasColumnName("deleted_by");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_at");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("modified_by");

                    b.Property<string>("QR_Code")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("qr_code");

                    b.Property<Guid?>("ReferenceId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("reference_id");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<string>("Supplier_Code")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("supplier_code");

                    b.Property<DateTime?>("Time")
                        .HasColumnType("datetime2")
                        .HasColumnName("time");

                    b.HasKey("Id");

                    b.ToTable("HISTORY");
                });

            modelBuilder.Entity("BookingService.Domain.Line", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("code");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deleted_at");

                    b.Property<int?>("DeteleBy")
                        .HasColumnType("int")
                        .HasColumnName("deleted_by");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_at");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("modified_by");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.Property<Guid?>("ReferenceId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("reference_id");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.ToTable("LINE");
                });

            modelBuilder.Entity("BookingService.Domain.LineDepartment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("code");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deleted_at");

                    b.Property<int?>("DeteleBy")
                        .HasColumnType("int")
                        .HasColumnName("deleted_by");

                    b.Property<Guid>("LineReference")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("line_reference");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_at");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("modified_by");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.Property<Guid?>("ReferenceId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("reference_id");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.ToTable("LINE_DEPARTMENT");
                });

            modelBuilder.Entity("BookingService.Domain.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CMND")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("cmnd");

                    b.Property<DateTime?>("Check_In")
                        .HasColumnType("datetime2")
                        .HasColumnName("check_in");

                    b.Property<DateTime?>("Check_Out")
                        .HasColumnType("datetime2")
                        .HasColumnName("check_out");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("code");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deleted_at");

                    b.Property<DateTime?>("Delivery_Date")
                        .HasColumnType("datetime2")
                        .HasColumnName("delivery_date");

                    b.Property<DateTime?>("Delivery_Invoice_Date")
                        .HasColumnType("datetime2")
                        .HasColumnName("delivery_invoice_date");

                    b.Property<int?>("Delivery_Item_Quantity")
                        .HasColumnType("int")
                        .HasColumnName("delivery_item_quantity");

                    b.Property<int?>("Delivery_Order_Quantity")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("delivery_order_quantity");

                    b.Property<DateTime?>("Delivery_Regis_Date")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasColumnName("delivery_regis_date");

                    b.Property<int?>("Delivery_Status")
                        .HasColumnType("int")
                        .HasColumnName("delivery_status");

                    b.Property<string>("Department_Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("department_code");

                    b.Property<string>("Department_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("department_name");

                    b.Property<Guid>("Department_Reference")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("department_reference");

                    b.Property<int?>("DeteleBy")
                        .HasColumnType("int")
                        .HasColumnName("deleted_by");

                    b.Property<string>("Driver_Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("driver_name");

                    b.Property<string>("Emergn_Email")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("emergn_email");

                    b.Property<string>("Emergn_Phone")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("emergn_phone");

                    b.Property<int?>("Invoice_Number")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("invoice_number");

                    b.Property<string>("Line_Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("line_code");

                    b.Property<string>("Line_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("line_name");

                    b.Property<Guid>("Line_Reference")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("line_reference");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("link");

                    b.Property<string>("Lisense_Plate")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("license_plate");

                    b.Property<int?>("Miss_Invoice_Number")
                        .HasColumnType("int")
                        .HasColumnName("miss_invoice_number");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_at");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("modified_by");

                    b.Property<string>("QR_Code")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("qr_code");

                    b.Property<string>("QrImage")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("qr_image");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("reason");

                    b.Property<int?>("Receipt_Status")
                        .HasColumnType("int")
                        .HasColumnName("receipt_status");

                    b.Property<DateTime?>("Receive_Time")
                        .HasColumnType("datetime2")
                        .HasColumnName("receiver_time");

                    b.Property<string>("Receiver_Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("receiver_name");

                    b.Property<Guid?>("ReferenceId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("reference_id");

                    b.Property<Guid>("RegisTime_Reference")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("registime_reference");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<int?>("Store_Code")
                        .HasColumnType("int")
                        .HasColumnName("store_code");

                    b.Property<string>("Store_Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("store_name");

                    b.Property<Guid>("Store_Reference")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("store_reference");

                    b.Property<string>("Supplier_Email")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("supplier_email");

                    b.Property<string>("Supplier_Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("supplier_name");

                    b.Property<string>("Supplier_PhoneNumber")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("supplier_phone");

                    b.Property<Guid>("Supplier_Reference")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("supplier_reference");

                    b.Property<string>("Vehicle_Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("vehicle_name");

                    b.Property<string>("register_from")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("registime_from");

                    b.Property<string>("register_to")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("registime_to");

                    b.HasKey("Id");

                    b.ToTable("ORDER");
                });

            modelBuilder.Entity("BookingService.Domain.OrderDelivery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("code");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deleted_at");

                    b.Property<int?>("DeteleBy")
                        .HasColumnType("int")
                        .HasColumnName("deleted_by");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_at");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("modified_by");

                    b.Property<Guid?>("Order_Reference")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("order_reference");

                    b.Property<Guid?>("ReferenceId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("reference_id");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.ToTable("ORDER_DELIVERY");
                });

            modelBuilder.Entity("BookingService.Domain.OrderReceipt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("code");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deleted_at");

                    b.Property<int?>("DeteleBy")
                        .HasColumnType("int")
                        .HasColumnName("deleted_by");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_at");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("modified_by");

                    b.Property<Guid?>("Order_Reference")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("order_reference");

                    b.Property<Guid?>("ReferenceId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("reference_id");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.ToTable("ORDER_RECEIPT");
                });

            modelBuilder.Entity("BookingService.Domain.RoleDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Action")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("action");

                    b.Property<string>("Controller")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("controller");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deleted_at");

                    b.Property<int?>("DeteleBy")
                        .HasColumnType("int")
                        .HasColumnName("deleted_by");

                    b.Property<string>("Menu")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("menu");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_at");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("modified_by");

                    b.Property<Guid?>("ReferenceId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("reference_id");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("role_id");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<string>("SubMenu")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("sub_menu");

                    b.HasKey("Id");

                    b.ToTable("ROLE_DETAIL", null, t => t.ExcludeFromMigrations());
                });

            modelBuilder.Entity("BookingService.Domain.Store", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("code")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<int?>("created_by")
                        .HasColumnType("int");

                    b.Property<DateTime?>("deleted_at")
                        .HasColumnType("datetime2");

                    b.Property<int?>("deleted_by")
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("langcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("modify_at")
                        .HasColumnType("datetime2");

                    b.Property<int?>("modify_by")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone_number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("reference_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.Property<string>("url_image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("STORE", null, t => t.ExcludeFromMigrations());
                });

            modelBuilder.Entity("BookingService.Domain.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("supplier_code");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deleted_at");

                    b.Property<int?>("DeteleBy")
                        .HasColumnType("int")
                        .HasColumnName("deleted_by");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("supplier_email");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_at");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("modified_by");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("supplier_name");

                    b.Property<string>("Phone_Number")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("supplier_phone");

                    b.Property<Guid?>("ReferenceId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("reference_id");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.ToTable("SUPPLIER");
                });

            modelBuilder.Entity("BookingService.Domain.SystemParameter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deleted_at");

                    b.Property<int?>("DeteleBy")
                        .HasColumnType("int")
                        .HasColumnName("deleted_by");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_at");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("modified_by");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("note");

                    b.Property<string>("ParameterName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("parameter_name");

                    b.Property<Guid?>("ReferenceId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("reference_id");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("value");

                    b.HasKey("Id");

                    b.ToTable("SYSTEM_PARAMETER", null, t => t.ExcludeFromMigrations());
                });

            modelBuilder.Entity("BookingService.Domain.TimeFrame", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("Amount")
                        .HasColumnType("int")
                        .HasColumnName("amount");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deleted_at");

                    b.Property<int?>("DeteleBy")
                        .HasColumnType("int")
                        .HasColumnName("deleted_by");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_at");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("modified_by");

                    b.Property<Guid?>("ReferenceId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("reference_id");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<Guid?>("StoreReference")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("store_ref");

                    b.Property<string>("TimeFrom")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("time_from");

                    b.Property<string>("TimeTo")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("time_to");

                    b.HasKey("Id");

                    b.ToTable("TIME_FRAME", null, t => t.ExcludeFromMigrations());
                });

            modelBuilder.Entity("BookingService.Domain.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("datetime2")
                        .HasColumnName("birthday");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deleted_at");

                    b.Property<string>("Department")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("department");

                    b.Property<int?>("DeteleBy")
                        .HasColumnType("int")
                        .HasColumnName("deleted_by");

                    b.Property<string>("Division")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("division");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("email");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("full_name");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("gender");

                    b.Property<DateTime?>("LastOnline")
                        .HasColumnType("datetime2")
                        .HasColumnName("last_online_at");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("modified_at");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int")
                        .HasColumnName("modified_by");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("password");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("phone");

                    b.Property<Guid?>("ReferenceId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("reference_id");

                    b.Property<int?>("RoleId")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("role_id");

                    b.Property<string>("StaffId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("staff_id");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<Guid?>("StoreManagement")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("store_management");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("user_name");

                    b.Property<Guid?>("WorkingLocation")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("working_location");

                    b.HasKey("Id");

                    b.ToTable("USER", null, t => t.ExcludeFromMigrations());
                });

            modelBuilder.Entity("BookingService.Domain.Divisions", b =>
                {
                    b.HasOne("BookingService.Domain.Department", "Deparment")
                        .WithMany("Divisions")
                        .HasForeignKey("DepartmentID");

                    b.Navigation("Deparment");
                });

            modelBuilder.Entity("BookingService.Domain.Department", b =>
                {
                    b.Navigation("Divisions");
                });
#pragma warning restore 612, 618
        }
    }
}
